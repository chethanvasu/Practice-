{"ast":null,"code":"var _jsxFileName = \"F:\\\\fetch-test-app\\\\src\\\\components\\\\SearchAString\\\\SearchAString.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./SearchAString.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchAString = () => {\n  _s();\n\n  const [inputString, setInputString] = useState(\"\");\n  const [find, setFind] = useState(\"\");\n\n  const onInputString = e => setInputString(e.target.value);\n\n  const onSearchString = e => setFind(e.target.value);\n\n  const onBtnClick = () => {\n    const setList = inputString.indexOf(find);\n\n    if (setList !== -1) {\n      alert(\"STRING EXSISTS\");\n      s;\n    } else {\n      alert(\"STRING DOES NOT EXSISTS\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Searching for a String\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputString,\n        placeholder: \"Enter the String\",\n        onChange: onInputString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: find,\n        placeholder: \"Searching the String\",\n        onChange: onSearchString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: onBtnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: setList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.inputString, \", \", item.searchString]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 54\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchAString, \"MomgTgROFfYePa8TO8geXOOYZJ0=\");\n\n_c = SearchAString;\nexport default SearchAString;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAString\");","map":{"version":3,"sources":["F:/fetch-test-app/src/components/SearchAString/SearchAString.js"],"names":["React","useState","SearchAString","inputString","setInputString","find","setFind","onInputString","e","target","value","onSearchString","onBtnClick","setList","indexOf","alert","s","map","item","index","searchString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,aAAa,GAAIC,CAAD,IAAOJ,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3C;;AACA,QAAMC,cAAc,GAAGH,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AAEA,QAAME,UAAU,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAGV,WAAW,CAACW,OAAZ,CAAoBT,IAApB,CAAhB;;AACI,QAAIQ,OAAO,KAAK,CAAC,CAAjB,EAAoB;AAChBE,MAAAA,KAAK,CAAC,gBAAD,CAAL;AAAwBC,MAAAA,CAAC;AAC5B,KAFD,MAEO;AACHD,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACR,GAPD;;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEZ,WAAd;AAA2B,QAAA,WAAW,EAAC,kBAAvC;AAA0D,QAAA,QAAQ,EAAEI;AAApE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,KAAK,EAAEF,IAAd;AAAoB,QAAA,WAAW,EAAC,sBAAhC;AAAuD,QAAA,QAAQ,EAAEM;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAA,6BACI;AAAA,kBAEQC,OAAO,CAACI,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAA,qBAAiBD,IAAI,CAACf,WAAtB,QAAqCe,IAAI,CAACE,YAA1C;AAAA,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAlCD;;GAAMjB,a;;KAAAA,a;AAoCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./SearchAString.css\"\r\n\r\nconst SearchAString = () => {\r\n    const [inputString, setInputString] = useState(\"\");\r\n    const [find, setFind] = useState(\"\");\r\n\r\n    const onInputString = (e) => setInputString(e.target.value);\r\n    const onSearchString =(e) => setFind(e.target.value);\r\n\r\n    const onBtnClick = () => {\r\n        const setList = inputString.indexOf(find);\r\n            if (setList !== -1) {\r\n                alert(\"STRING EXSISTS\");s\r\n            } else {\r\n                alert(\"STRING DOES NOT EXSISTS\");\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Searching for a String</h2>\r\n            <div>\r\n                <input value={inputString} placeholder=\"Enter the String\" onChange={onInputString}/>\r\n                <input value={find} placeholder=\"Searching the String\" onChange={onSearchString}/>\r\n                <input type=\"submit\" onClick={onBtnClick}/>\r\n            </div>\r\n                \r\n            <div>\r\n                <ul>\r\n                    {\r\n                        setList.map((item, index) => <li key={index}>{item.inputString}, {item.searchString}</li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchAString;\r\n\r\n"]},"metadata":{},"sourceType":"module"}